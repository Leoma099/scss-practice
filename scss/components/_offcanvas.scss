// Name:            Off-canvas
// Description:     Component to create an off-canvas sidebar
//
// Component:       `sc-offcanvas`
//
// Sub-components:  `sc-offcanvas-bar`
//                  `sc-offcanvas-container`
//                  `sc-offcanvas-page`
//
// Adopted:         `sc-close`
//
// Modifiers:       `sc-offcanvas-flip`
//                  `sc-offcanvas-bar-animation`
//                  `sc-offcanvas-reveal`
//                  `sc-offcanvas-overlay`
//                  `sc-offcanvas-container-animation`
//
// States:          `sc-open`
// ========================================================================

// Variables
// ========================================================================

$offcanvas-z-index:                     layer(offcanvas) !default;

$offcanvas-bar-width:                   270px !default;
$offcanvas-bar-padding-vertical:        margin(global) !default;
$offcanvas-bar-padding-horizontal:      margin(global) !default;
$offcanvas-bar-background:              color(inverse) !default;

$offcanvas-bar-width-m:                 350px !default;
$offcanvas-bar-padding-vertical-m:      gutter(medium) !default;
$offcanvas-bar-padding-horizontal-m:    gutter(medium) !default;

$offcanvas-bar-width-l:                 450px !default;
$offcanvas-bar-padding-vertical-l:      gutter(medium) !default;
$offcanvas-bar-padding-horizontal-l:    gutter(medium) !default;

$offcanvas-title-font-size:             font-size(large) !default;
$offcanvas-title-font-weight:           font-weight(bold) !default;
$offcanvas-title-line-height:           font(line-height) !default;
$offcanvas-title-color:                 color(emphasis) !default;

$offcanvas-close-position:              20px !default;
$offcanvas-close-padding:               5px !default;

$offcanvas-overlay-background:          rgba(0, 0, 0, 0.1) !default;

.sc-offcanvas
{
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    z-index: $offcanvas-z-index;
    height: 100%;
}

.sc-offcanvas .sc-offcanvas-bloc
{
    display: block;
}

.sc-offcanvas .sc-offcanvas-flip
{
    right: 0;
    left: auto;
}

.sc-offcanvas-bar
{
    position: absolute;
    top: 0;
    bottom: 0;
    left: 30px;
    box-sizing: border-box;
    height: 94%;
    width: $offcanvas-bar-width;
    padding: $offcanvas-bar-padding-vertical $offcanvas-bar-padding-horizontal;
    background: $offcanvas-bar-background;
    border-radius: 20px;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    transform: translate(-100%, 3%);
}

.sc-offcanvas-bar .sc-offcanvas-bar-full
{
    width: 100%;
    height: 100%;
    left: 0;
    border-radius: 0px;
    transform: translate(-100%, 0);
}

@include respond-to(medium)
{
    .sc-offcanvas-bar
    {
        width: $offcanvas-bar-width-m;
        padding: $offcanvas-bar-padding-vertical-m $offcanvas-bar-padding-horizontal-m;
    }

}

@include respond-to(large)
{

    .sc-offcanvas-bar
    {
        width: $offcanvas-bar-width-l;
        padding: $offcanvas-bar-padding-vertical-l $offcanvas-bar-padding-horizontal-l;
    }

}



/* Flip modifier */
.sc-offcanvas-flip .sc-offcanvas-bar
{
    left: auto;
    right: 30px;
    transform: translate(100%, 3%);
}

.sc-offcanvas-flip .sc-offcanvas-bar.sc-offcanvas-bar-full
{
    right: 0;
    transform: translate(100%, 0);
}



/*
 * Open
 */

.sc-open > .sc-offcanvas-bar
{
    transform: translate(0, 3%);
}

.sc-open > .sc-offcanvas-bar.sc-offcanvas-bar-full
{
    transform: translate(0, 0);
}



/*
 * Slide animation (Used in slide and push mode)
 */

.sc-offcanvas-bar-animation
{
    transition: transform 0.3s ease-out;
}



/* Title
   ================================================== */

.sc-offcanvas-title
{
    color: $offcanvas-title-color;
    font-size: $offcanvas-title-font-size;
    line-height: $offcanvas-title-line-height;
    font-weight: $offcanvas-title-font-weight;
    margin: 0;
}



/* Close
 * Adopts `sc-close`
   ================================================== */

.sc-offcanvas-close
{
    position: absolute;
    top: $offcanvas-close-position;
    right: $offcanvas-close-position;
    padding: $offcanvas-close-padding;
}



/* Overlay
   ================================================== */

/*
 * Overlay the whole page, Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events
 */

.sc-offcanvas-overlay
{
    /* 1 */
    width: 100vw;
    /* 2 */
    touch-action: none;
}

/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */

.sc-offcanvas-overlay::before
{
    /* 1 */
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: $offcanvas-overlay-background;
    /* 2 */
    opacity: 0;
    transition: opacity 0.3s linear;
}

.sc-offcanvas-overlay.sc-open::before
{
    opacity: 1;
}



/* Prevent scrolling
   ================================================== */

/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead `transform` beacuse position `fixed` elements like sticky navbars
 * lose thier fixed state and behaves like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */

.sc-offcanvas-container
{
    position: relative;
    left: 0;
    transition: left 0.3s ease-out;
    /* 1 */
    box-sizing: border-box;
    width: 100%;
}

/*
 * Activate slide-out animation
 */

:not(.sc-offcanvas-flip).sc-offcanvas-container-animation
{
    left: $offcanvas-bar-width;
}

.sc-offcanvas-flip.sc-offcanvas-container-animation
{
    left: (-$offcanvas-bar-width);
}

/* Tabled landscape and bigger */
@include respond-to(medium)
{
    :not(.sc-offcanvas-flip).sc-offcanvas-container-animation
    {
        left: $offcanvas-bar-width-m;
    }
    
    .sc-offcanvas-flip.sc-offcanvas-container-animation
    {
        left: (-$offcanvas-bar-width-m);
    }

}